{
	"name": "cpphelper",
	"displayName": "cpphelper",
	"description": "",
	"license": "MIT",
	"publisher": "flywine",
	"icon": "resources/logo.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/93Alliance/vscode-cpphelper"
	},
	"version": "0.0.9",
	"engines": {
		"vscode": "^1.62.0"
	},
	"categories": [
		"Programming Languages"
	],
	"keywords": [
		"C",
		"C++",
		"clang"
	],
	"activationEvents": [
		"onLanguage:c",
		"onLanguage:cpp",
		"onLanguage:objective-c",
		"onLanguage:objective-cpp",
		"workspaceContains:CMakeLists.txt"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"menus": {
			"explorer/context": [
				{
					"command": "cpphelper.createCppClass",
					"group": "cpphelper@1",
					"when": "explorerResourceIsFolder"
				},
				{
					"command": "cpphelper.createUnitTest",
					"group": "cpphelper@2",
					"when": "explorerResourceIsFolder"
				}
			]
		},
		"commands": [
			{
				"command": "cpphelper.createHeaderGuard",
				"category": "cpphelper",
				"title": "Create header guard"
			},
			{
				"command": "cpphelper.createCppClass",
				"category": "cpphelper",
				"title": "Create cpp class"
			},
			{
				"command": "cpphelper.createUnitTest",
				"category": "cpphelper",
				"title": "Create unit test file"
			},
			{
				"command": "cpphelper.switch",
				"category": "cpphelper",
				"title": "Switch Header/Source"
			},
			{
				"command": "cpphelper.switchRightPane",
				"category": "cpphelper",
				"title": "Switch Header/Source To Right Pane"
			},
			{
				"command": "cpphelper.switchLeftPane",
				"category": "cpphelper",
				"title": "Switch Header/Source To Left Pane"
			},
			{
				"command": "cpphelper.createFuncImpl",
				"category": "cpphelper",
				"title": "Create function implement"
			},
			{
				"command": "cpphelper.insertRegion",
				"category": "cpphelper",
				"title": "Insert region into the selected range"
			}
		],
		"configuration": {
			"type": "object",
			"title": "cpphelper",
			"properties": {
				"cpphelper.region": {
					"type": "object",
					"default": {
						"start": "// #region name",
						"end": "// #endregion"
					}
				},
				"cpphelper.cmakeBuildOutputDoclinkEnable": {
					"type": "boolean",
					"default": false,
					"description": "Enable cmake build output with document link."
				},
				"cpphelper.linkFileLanguagesIds": {
					"type": "array",
					"default": [
						"log",
						"Log"
					],
					"description": "Set the languages ids to provide links for.",
					"scope": "resource"
				},
				"cpphelper.cmakeBuildOutputFormatEnable": {
					"type": "boolean",
					"default": true,
					"description": "Enable cmake build output format in BCO channel."
				},
				"cpphelper.headerGuardPattern": {
					"type": "string",
					"default": "{FILE}_HPP",
					"description": "Header Guard Style."
				},
				"cpphelper.autoCreateHeaderGuard": {
					"type": "boolean",
					"default": true,
					"description": "The header guard is automatically created when the file is created."
				},
				"cpphelper.classCreatorExtension": {
					"type": "object",
					"default": {
						"header": ".hpp",
						"source": ".cpp"
					},
					"description": "Header Guard Extension."
				},
				"cpphelper.classCreatorTemplate": {
					"type": "string",
					"default": "class ${className}\n{\npublic:\n    ${className}();\n    ~${className}();\nprivate:\n};\n",
					"description": "class template."
				},
				"cpphelper.unitTestCreatorTemplate": {
					"type": "string",
					"default": "#include \"benchmark/benchmark.h\"\n#include \"gtest/gtest.h\"\n\nTEST(Test${fileName}, base)\n{\n}\n",
					"description": "unit test template."
				},
				"cpphelper.headerSourceMappings": {
					"type": "array",
					"description": "Array of mappings, defaults to C++ mappings",
					"default": [
						{
							"header": [
								".h",
								".hpp",
								".hh",
								".hxx"
							],
							"source": [
								".cpp",
								".c",
								".cc",
								".cxx",
								".m",
								".mm"
							],
							"name": "C++"
						}
					]
				},
				"cpphelper.compileCommandsStrip": {
					"type": "object",
					"default": {
						"enable": false,
						"dir": "${workspaceFolder}/build",
						"outputDir": "${workspaceFolder}",
						"windows": [
							{
								"match": "^C:\\\\.*cl.exe",
								"replace": "/usr/bin/clang++"
							},
							{
								"match": "-Zc:__cplusplus",
								"replace": ""
							},
							{
								"match": "-permissive-",
								"replace": ""
							},
							{
								"match": "-std:c\\+\\+latest",
								"replace": "-std=c++20"
							},
							{
								"match": "-wd5105",
								"replace": ""
							},
							{
								"match": "-MDd",
								"replace": ""
							}
						],
						"linux": []
					},
					"description": "Strip compile_commands.json database file."
				}
			}
		},
		"languages": [
			{
				"id": "Log",
				"aliases": [
					"log"
				],
				"configuration": "./language-configuration.json",
				"mimetypes": [
					"log",
					"text/log",
					"text/x-log",
					"text/x-code-output",
					"x-code-output"
				]
			}
		],
		"grammars": [
			{
				"language": "Log",
				"scopeName": "code.log",
				"path": "./resources/syntaxes/log.tmLanguage"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "node node_modules/webpack/bin/webpack",
		"watch": "node node_modules/webpack/bin/webpack --watch",
		"package": "node node_modules/webpack/bin/webpack --mode production --devtool hidden-source-map",
		"test-compile": "tsc -p ./",
		"test-watch": "tsc -watch -p ./",
		"pretest": "npm run test-compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js",
		"publish": "vsce publish"
	},
	"devDependencies": {
		"@types/vscode": "^1.59.0",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.2.2",
		"@types/node": "14.x",
		"eslint": "^7.27.0",
		"@typescript-eslint/eslint-plugin": "^4.26.0",
		"@typescript-eslint/parser": "^4.26.0",
		"glob": "^7.1.7",
		"mocha": "^8.4.0",
		"typescript": "^4.3.2",
		"vscode-test": "^1.5.2",
		"ts-loader": "^9.2.2",
		"webpack": "^5.38.1",
		"webpack-cli": "^4.7.0",
		"@types/ws": "^7.4.4"
	},
	"dependencies": {},
	"extensionDependencies": [
	]
}